def FrequentWords(Text, k):
    
    freqMap = {}
    n = len(Text)
    '''
    The strategy here is to jump accordingly in case.
    i = 0 
    while i < n-k+1:
        Pattern = Text[i:k+i]
        if Pattern not in freqMap:
            freqMap[Pattern] = 1
            i = i +1
        else:
            freqMap[Pattern]=freqMap.get(Pattern)+1
            i = i +len(Pattern)-overlap
    '''
    for i in range(n-k+1):
        Pattern = Text[i:k+i]
        if Pattern not in freqMap:
            freqMap[Pattern] = 1
        else:
            freqMap[Pattern]=freqMap.get(Pattern)+1
  
    vals = freqMap.values()
    maxi = max(vals)
    
    
    return [i for i,j in freqMap.items() if j == maxi]

first = "ACTCGCGATTAAAATCTACTCGCGATTAAAATCTACTCGCGATACTCGCGATTAAAATCTTTGGCTATTGGCTAACTCGCGATGTCAGGAACTACATAGACTCGCGATGTCAGGAACACTCGCGATTAAAATCTTTGGCTAACTCGCGATTTGGCTATACATAGTAAAATCTGTCAGGAACGTCAGGAACACTCGCGATGTCAGGAACTTGGCTATTGGCTATTGGCTATTGGCTATAAAATCTTACATAGTACATAGTAAAATCTTTGGCTATTGGCTAGTCAGGAACTAAAATCTACTCGCGATGTCAGGAACTAAAATCTTTGGCTAGTCAGGAACTTGGCTATAAAATCTTAAAATCTGTCAGGAACTAAAATCTACTCGCGATTAAAATCTTAAAATCTACTCGCGATACTCGCGATACTCGCGATTTGGCTAACTCGCGATACTCGCGATTACATAGGTCAGGAACTAAAATCTTAAAATCTTAAAATCTGTCAGGAACTTGGCTATAAAATCTTTGGCTAACTCGCGATTACATAGGTCAGGAACTTGGCTATTGGCTAACTCGCGATTAAAATCTGTCAGGAACTAAAATCTTTGGCTATAAAATCTGTCAGGAACTACATAGGTCAGGAACACTCGCGATGTCAGGAACTTGGCTATACATAGTACATAGTAAAATCTTAAAATCTGTCAGGAACTTGGCTATAAAATCTTACATAGGTCAGGAACGTCAGGAACTACATAGGTCAGGAACTTGGCTAGTCAGGAACGTCAGGAACTTGGCTATTGGCTATAAAATCTTTGGCTATACATAGTACATAGTAAAATCTTACATAGTACATAGTTGGCTATACATAGACTCGCGATTACATAGACTCGCGAT"
second = 12

print(FrequentWords(first,second))